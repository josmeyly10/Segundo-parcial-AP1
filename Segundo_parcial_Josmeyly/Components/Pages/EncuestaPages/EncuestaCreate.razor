@page "/Encuesta/Create"
@inject EncuestaServices encuestaServices
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Crear Encuesta</PageTitle>

<EditForm Model="Encuesta" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="container">
        <div class="shadow-lg">

            @*Header*@
            <div class="card-header text-center">
                <h3><strong>Crear Encuesta</strong></h3>
            </div>

            @*Body*@
            <div class="card-body">

                @*EncuestaId*@
                <div class="col-1">
                    <label class="form-label"><strong>EncuestaId</strong></label>
                    <InputNumber class="form-control" readonly @bind-Value="Encuesta.EncuestaId"></InputNumber>
                </div>

                @*Asignatura*@
                <div class="col-3 mt-2">
                    <label class="form-label"><strong>Asignatura</strong></label>
                    <InputText class="form-control" @bind-Value="Encuesta.Asignatura"></InputText>
                    <ValidationMessage For="(()=> Encuesta.Asignatura)" />
                </div>

                @*Fecha*@
                <div class="col-2 mt-2">
                    <label class="form-label"><strong>Fecha</strong></label>
                    <InputDate class="form-control" @bind-Value="Encuesta.Fecha"></InputDate>
                </div>

                @*Ciudades*@
                <div class="col-3 mt-2">
                    <label class="form-label"><strong>Ciudad</strong></label>
                    <InputSelect class="form-select" @bind-Value="Encuesta.CiudadesId">
                        <option value="0" selected disabled>Seleccione una ciudad</option>
                        @foreach (var ciudad in ListaCiudades)
                        {
                            <option value="@ciudad.CiudadesId">@ciudad.Nombres</option>
                        }
                    </InputSelect>
                </div>

                @*Monto*@
                <div class="col-2 mt-2">
                    <label class="form-label"><strong>Monto</strong></label>
                    <InputNumber class="form-control" readonly @bind-Value="Encuesta.Monto"></InputNumber>
                    <ValidationMessage For="(()=> Encuesta.Monto)" />
                </div>
            </div>

            @*Detalle de Ciudades*@
            <div class="border border-success mb-4">
                <div class="card-header bg-secondary text-white">
                    <h5 class="mb-0"><strong>Detalle de Ciudades</strong></h5>
                </div>
                <div class="card-body p-3">
                    <div class="row align-items-center m-0">

                        @*Ciudad*@
                        <div class="col-sm-4 p-0 text-center">
                            <InputSelect class="form-select" @bind-Value="Seleccionado">
                                <option value="0" selected disabled>--Seleccione una ciudad--</option>
                                @foreach (var ciudad in ListaCiudades)
                                {
                                    <option value="@ciudad.CiudadesId">@ciudad.Nombres</option>
                                }
                            </InputSelect>
                        </div>

                        @*MontoCuenta*@
                        <div class="col-sm-3 p-0">
                            <div class="input-group">
                                <label class="input-group-text"><strong>Monto Cuenta</strong></label>
                                <InputNumber class="form-control" @bind-Value="DetalleCiudad.MontoCuenta"></InputNumber>
                            </div>
                        </div>

                        @*Agregar*@
                        <div class="col-sm-1 p-0">
                            <button type="button" class="btn btn-outline-success bi bi-plus" @onclick="AgregarDetalle">Agregar</button>
                        </div>

                        @*Tabla de Detalles*@
                        <div class="table-responsive mt-3">
                            <table class="table table-bordered table-light m-1">
                                <thead class="thead">
                                    <tr class="table">
                                        <th>CiudadId</th>
                                        <th>Monto Cuenta</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var detalle in ListaDetalleCiudad)
                                    {
                                        <tr>
                                            <td>@detalle.DetalleCiudadId</td>
                                            <td>@detalle.MontoCuenta</td>
                                            <td><button @onclick="@(() => RemoverDetalle(detalle))" class="btn btn-danger bi bi-trash" type="button">Remover</button></td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            @*Footer*@
            <div class="card-footer text-center">
                <button type="button" class=" btn btn-primary" @onclick="() => Volver()">Volver</button>
                <button type="submit" class=" btn btn-success">Guardar</button>
            </div>
        </div>
    </div>
    @Mensaje
</EditForm>

@code {
    public Encuesta Encuesta { get; set; } = new Encuesta();
    public DetalleCiudad DetalleCiudad { get; set; } = new DetalleCiudad();
    public List<DetalleCiudad> ListaDetalleCiudad { get; set; } = new List<DetalleCiudad>();
    public List<Ciudades> ListaCiudades { get; set; } = new List<Ciudades>();
    public List<Encuesta> ListaEncuesta { get; set; } = new List<Encuesta>();

    public string Mensaje { get; set; } = string.Empty;
    public int Seleccionado { get; set; }

    protected override async Task OnInitializedAsync()
    {
        
        ListaEncuesta = await encuestaServices.Listar(e => true);
    }

    public async Task Guardar()
    {
        Encuesta.DetalleCiudad = ListaDetalleCiudad;
        var crear = await encuestaServices.Guardar(Encuesta);

        if (crear)
        {
            Mensaje = "Encuesta creada exitosamente.";
            Volver();
        }
        else
        {
            Mensaje = "No se ha podido crear la encuesta.";
        }
    }

    public void AgregarDetalle()
    {
        var seleccionado = ListaCiudades
        .FirstOrDefault(c => c.CiudadesId == Seleccionado);

        if (seleccionado != null && DetalleCiudad.MontoCuenta > 0)
        {
            var nuevoDetalle = new DetalleCiudad
                {
                    DetalleCiudadId = seleccionado.CiudadesId,
                    MontoCuenta = DetalleCiudad.MontoCuenta
                };

            Encuesta.Monto += nuevoDetalle.MontoCuenta;

            ListaDetalleCiudad.Add(nuevoDetalle);
            DetalleCiudad = new DetalleCiudad();
            Seleccionado = 0;
        }
    }

    public void RemoverDetalle(DetalleCiudad eliminarDetalle)
    {
        ListaDetalleCiudad.Remove(eliminarDetalle);

        Encuesta.Monto -= eliminarDetalle.MontoCuenta;

        Seleccionado = eliminarDetalle.DetalleCiudadId;
        DetalleCiudad.MontoCuenta = eliminarDetalle.MontoCuenta;
    }

    public void Volver()
    {
        navigationManager.NavigateTo("/Encuesta/Index");
    }
}